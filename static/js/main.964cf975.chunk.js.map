{"version":3,"sources":["pig.png","chimpanz.png","doggy.png","pigcheck.png","pigx.png","chimpx.png","chimpcheck.png","dogcheck.png","dogx.png","pigbackground.jpeg","logo.svg","x-mark.png","check.png","Popup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","Wrapper","styled","div","gsap","registerPlugin","CSSPlugin","TextPlugin","iconsArray","src","pig","width","height","link","info","chimp","dog","questionsArr","id","text","numberCorrect","App","props","logoTl","timeline","paused","animalTl","content","head","subhead","feature","reading","description","questionText","check","starterButton","enterPig","pigBackground","show","popup1","cards","word","icons","buttons","furtherInfo","box","newIcons","newButtons","nav","state","currentQuestion","currentIndx","selectedStart","furtherReading","handleClick","bind","selectAnimal","showCorrect","this","set","opacity","hidden","autoAlpha","from","left","to","duration","value","ease","staggerTo","staggerFrom","scale","next","margin","backgroundColor","color","attr","nextIndx","setState","last","pop","unshift","forEach","element","play","index","pigcheck","fromTo","x","RoughEase","config","strength","points","template","Linear","easeNone","randomize","clearProps","pigx","chimpcheck","chimpx","dogcheck","dogx","console","log","className","ref","h1","span","h2","map","icon","key","style","display","flexDirection","border","button","alt","img","onClick","pigbackground","zIndex","position","top","fontWeight","fontSize","justifyContent","alignText","fontFamily","p","maxWidth","wordBreak","a","onHover","href","backgroundSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,8ECA3CD,EAAOC,QAAU,IAA0B,kC,kCCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,m4BCGvBC,IAAMC,U,IAiBpBC,EAAUC,IAAOC,IAAV,K,0GCEbC,IAAKC,eAAeC,KACpBF,IAAKC,eAAeE,KAIpB,IAAMC,EAAa,CAClB,CAAEC,IAAKC,IAAKC,MAAO,MAAOC,OAAQ,MAAOC,KAAM,qFAAsFC,KAAM,gFAC1I,CAAEL,IAAKM,IAAOJ,MAAO,MAAOC,OAAQ,MAAOC,KAAM,gGAAiGC,KAAM,2CACzJ,CAAEL,IAAKO,IAAKL,MAAO,MAAOC,OAAQ,MAAOC,KAAK,wFAAyFC,KAAM,gFAExIG,EAAe,CACrB,CAACC,GAAI,EAAGC,KAAM,4CAA6CT,KAAK,EAAMK,OAAO,EAAMC,KAAK,GACxF,CAACE,GAAI,EAAGC,KAAM,oCAAqCT,KAAK,EAAMK,OAAO,EAAMC,KAAK,GAChF,CAACE,GAAI,EAAGC,KAAM,uEAAwET,KAAK,EAAMK,OAAO,EAAMC,KAAK,GACnH,CAACE,GAAI,EAAGC,KAAM,sGAAuGT,KAAK,EAAMK,OAAO,EAAMC,KAAK,GAClJ,CAACE,GAAI,EAAGC,KAAM,mEAAoET,KAAK,EAAMK,OAAO,EAAMC,KAAK,GAC/G,CAACE,GAAI,EAAGC,KAAM,uCAAwCT,KAAK,EAAMK,OAAO,EAAMC,KAAK,GACnF,CAACE,GAAI,EAAGC,KAAM,mFAAoFT,KAAK,EAAMK,OAAO,EAAMC,KAAK,IAG3HI,EAAgB,EA0ZLC,E,kDAtZd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IAECC,OAAS,IAAInB,IAAKoB,SAAS,CAAEC,QAAO,IACzC,EAAKC,SAAW,IAAItB,IAAKoB,SAAS,CAACC,QAAQ,IAE7C,EAAKE,QAAU,KACf,EAAKC,KAAO,KACZ,EAAKC,QAAU,KACb,EAAKC,QAAU,KACf,EAAKC,QAAU,KACf,EAAKC,YAAc,KACnB,EAAKC,aAAe,KACpB,EAAKC,MAAQ,KACb,EAAKC,cAAgB,KACrB,EAAKC,SAAW,KAChB,EAAKC,cAAgB,KACrB,EAAKC,KAAO,KACZ,EAAKC,OAAS,KACd,EAAKC,MAAQ,CAAC,EAAKZ,KAAM,EAAKa,KAAM,EAAKZ,SACzC,EAAKa,MAAQ,GACb,EAAKC,QAAU,GACf,EAAKC,YAAa,GAClB,EAAKC,IAAM,GACX,EAAKhC,KAAO,GACZ,EAAKiC,SAAW,GAChB,EAAKC,WAAa,GAClB,EAAKC,IAAM,KAGX,EAAKC,MAAQ,CACXC,gBAAiB,4BACjBC,YAAa,EACbC,eAAe,EACfC,gBAAgB,GAElB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAtCJ,E,gEA2CfG,KAAKnC,OACFoC,IAAID,KAAKlB,MAAM,GAAI,CAACoB,QAAS,IAC7BD,IAAID,KAAKtB,SAAU,CAACyB,QAAQ,IAC5BF,IAAID,KAAKrB,cAAe,CAACwB,QAAQ,IACjCF,IAAID,KAAKvB,cAAe,CAAC0B,QAAQ,IACjCF,IAAID,KAAK/B,QAAS,CAAEmC,UAAW,IAC/BC,KAAKL,KAAKlB,MAAM,GAAI,GAAK,CAAEwB,KAAM,IAAKF,UAAW,IAEpDJ,KAAKnC,OAAO0C,GAAGP,KAAKlB,MAAM,GAAI,CAAC0B,SAAU,EAAK/C,KAAM,CAChDgD,MAAO,cACNC,KAAM,SACRH,GAAGP,KAAKlB,MAAM,GAAI,CAAC0B,SAAU,EAAK/C,KAAM,CACtCgD,MAAO,SAEVC,KAAM,SACLH,GAAGP,KAAKlB,MAAM,GAAI,CAAC0B,SAAU,EAAK/C,KAAM,CACvCgD,MAAO,aAETC,KAAM,SACLH,GAAGP,KAAKlB,MAAM,GAAI,CAAC0B,SAAU,EAAK/C,KAAM,CACvCgD,MAAO,SAETC,KAAM,SAETV,KAAKnC,OAAOwC,KAAKL,KAAKlB,MAAM,GAAI,GAAK,CAAEwB,KAAM,IAAKF,UAAW,IAE7DJ,KAAKnC,OAAO8C,UAAWX,KAAKlB,MAAO,EAAG,CAACoB,QAAS,GAAK,GAAK,UAE1DF,KAAKnC,OAAO0C,GAAGP,KAAKlB,MAAM,GAAI,CAACoB,QAAS,EAAGzC,KAAM,uEAI/CwC,IAAID,KAAK7C,KAAM,CAACgD,OAAQ,SACxBS,YAAYZ,KAAKhB,MAAO,GAAK,CAAE6B,MAAO,EAAGT,UAAW,GAAK,IACzDQ,YAAYZ,KAAKf,QAAS,GAAK,CAAE4B,MAAO,EAAGT,UAAW,GAAK,IAG5DJ,KAAKnC,OAAOwC,KAAKL,KAAKc,KAAM,GAAK,CAAER,KAAM,IAAKF,UAAW,GAAK,UAC9DJ,KAAKnC,OAAOwC,KAAKL,KAAKpB,KAAM,GAAK,CAAE0B,KAAM,IAAKF,UAAW,GAAK,UAE9DJ,KAAKnC,OAAOoC,IAAID,KAAKlB,MAAM,GAAI,CAACoB,QAAS,EAAGzC,KAAM,6CAA8C,UAEhGuC,KAAKhC,SAASiC,IAAID,KAAK/B,QAAS,CAAEmC,UAAW,IAC5CG,GAAGP,KAAKlB,MAAM,GAAI,CAAC0B,SAAU,EAAK/C,KAAM,CACvCgD,MAAO,mBACNC,KAAM,QAAS,OAElBV,KAAKhC,SAAS2C,UAAUX,KAAKhB,MAAO,GAAK,CAAEmB,QAAQ,GAAS,KAC3DQ,UAAUX,KAAKf,QAAS,GAAK,CAAE8B,OAAQ,OAAQZ,QAAQ,EAAOa,gBAAiB,WAAY,KAC3FL,UAAUX,KAAKd,YAAa,GAAK,CAAE+B,MAAO,WAAa,KACvDhB,IAAID,KAAKhB,MAAO,CAACkB,QAAS,KAC1BS,UAAUX,KAAK7C,KAAM,GAAK,CAACgD,QAAQ,GAAQ,O,oCAe5C,GAJAzD,IAAKuD,IAAID,KAAKf,QAAU,CAAC+B,gBAAiB,gBAC1CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAKC,OACpCN,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAKM,OACpCX,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAKO,OAChC0C,KAAKT,MAAME,YAAc,EAAE,CAC/B,IAAM0B,EAAWnB,KAAKT,MAAME,YAAc,EAC1CO,KAAKoB,SAAS,CACZ5B,gBAAiBjC,EAAa4D,GAAU1D,KACxCgC,YAAa0B,QAGV,CACHnB,KAAKoB,SAAS,CACZ5B,gBAAgB,YAAD,OAAc9B,EAAd,4BAEjBhB,IAAKuD,IAAID,KAAKf,QAAS,CAACkB,QAAQ,IAChCzD,IAAKuD,IAAID,KAAKhB,MAAO,CAACmB,QAAQ,IAC9BzD,IAAKuD,IAAID,KAAKpB,KAAM,CAACuB,QAAQ,IAC7BzD,IAAKuD,IAAID,KAAKc,KAAM,CAACX,QAAQ,IAC7BzD,IAAKuD,IAAID,KAAKlB,MAAM,GAAI,CAACqB,QAAQ,IACjC,IAAIkB,EAAOvE,EAAWwE,MACtBxE,EAAWyE,QAAQF,GACnBvE,EAAW0E,SAAQ,SAAAC,GACjBA,EAAQxE,MAAQ,QAChBwE,EAAQvE,OAAS,WAEnB8C,KAAKhC,SAAS0D,U,mCAKLC,GAEC,IAAVA,EACEpE,EAAayC,KAAKT,MAAME,aAAazC,KACvCU,IACAhB,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAiB,YAC5CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK6E,OACpClF,IAAKmF,OAAO7B,KAAKhB,MAAM,GAAI,GAAK,CAAC8C,GAAG,GAAI,CAACA,EAAE,EAAGpB,KAAKqB,IAAUrB,KAAKsB,OAAO,CAACC,SAAS,EAAGC,OAAO,GAAIC,SAASC,IAAOC,SAAUC,WAAU,IAAUC,WAAW,QAG1J7F,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAgB,YAC3CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAKyF,OACpC9F,IAAKmF,OAAO7B,KAAKhB,MAAM,GAAI,GAAK,CAAC8C,GAAG,GAAI,CAACA,EAAE,EAAGpB,KAAKqB,IAAUrB,KAAKsB,OAAO,CAACC,SAAS,EAAGC,OAAO,GAAIC,SAASC,IAAOC,SAAUC,WAAU,IAAUC,WAAW,OAG3I,IAAVZ,EACHpE,EAAayC,KAAKT,MAAME,aAAapC,OACvCK,IACAhB,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAiB,YAC5CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK0F,OACpC/F,IAAKmF,OAAO7B,KAAKhB,MAAM,GAAI,GAAK,CAAC8C,GAAG,GAAI,CAACA,EAAE,EAAGpB,KAAKqB,IAAUrB,KAAKsB,OAAO,CAACC,SAAS,EAAGC,OAAO,GAAIC,SAASC,IAAOC,SAAUC,WAAU,IAAUC,WAAW,QAG1J7F,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAgB,YAC3CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK2F,OACpChG,IAAKmF,OAAO7B,KAAKhB,MAAM,GAAI,GAAK,CAAC8C,GAAG,GAAI,CAACA,EAAE,EAAGpB,KAAKqB,IAAUrB,KAAKsB,OAAO,CAACC,SAAS,EAAGC,OAAO,GAAIC,SAASC,IAAOC,SAAUC,WAAU,IAAUC,WAAW,OAIxJhF,EAAayC,KAAKT,MAAME,aAAanC,KACvCI,IACAhB,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAiB,YAC5CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK4F,OACpCjG,IAAKmF,OAAO7B,KAAKhB,MAAM,GAAI,GAAK,CAAC8C,GAAG,GAAI,CAACA,EAAE,EAAGpB,KAAKqB,IAAUrB,KAAKsB,OAAO,CAACC,SAAS,EAAGC,OAAO,GAAIC,SAASC,IAAOC,SAAUC,WAAU,IAAUC,WAAW,QAG1J7F,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAgB,YAC3CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK6F,OACpClG,IAAKmF,OAAO7B,KAAKhB,MAAM,GAAI,GAAK,CAAC8C,GAAG,GAAI,CAACA,EAAE,EAAGpB,KAAKqB,IAAUrB,KAAKsB,OAAO,CAACC,SAAS,EAAGC,OAAO,GAAIC,SAASC,IAAOC,SAAUC,WAAU,IAAUC,WAAW,S,oCAMxJhF,EAAayC,KAAKT,MAAME,aAAazC,KACvCN,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAiB,YAC5CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK6E,SAGpClF,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAgB,YAC3CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAKyF,QAElCjF,EAAayC,KAAKT,MAAME,aAAapC,OACvCX,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAiB,YAC5CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK0F,SAGpC/F,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAgB,YAC3CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK2F,QAElCnF,EAAayC,KAAKT,MAAME,aAAanC,KACvCZ,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAiB,YAC5CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK4F,SAGpCjG,IAAKuD,IAAID,KAAKf,QAAQ,GAAI,CAAC+B,gBAAgB,YAC3CtE,IAAKuD,IAAID,KAAKhB,MAAM,GAAI,CAACkC,KAAK,CAACnE,IAAK6F,U,+BAKhC,IAAD,OAEL,OADAC,QAAQC,IAAI,QAAS9C,KAAKT,OACrBS,KAAKT,MAAMI,eAoGP,yBAAKoD,UAAU,aACzB,yBAAKA,UAAU,OACd,yBAAKA,UAAU,eAMd,yBAAKA,UAAU,eAEd,yBAAKA,UAAU,OAEf,yBAAKA,UAAU,UAAUC,IAAM,SAAAvG,GAAG,OAAI,EAAKwB,QAAUxB,IAIpD,wBAAIuG,IAAM,SAAAC,GAAE,OAAI,EAAKnE,MAAM,GAAKmE,IAAhC,mBAAqD,0BAAMD,IAAK,SAAAE,GAAI,OAAI,EAAKpE,MAAM,GAAKoE,IAAnC,QAC9C,wBAAIF,IAAM,SAAAG,GAAE,OAAI,EAAKrE,MAAM,GAAKqE,IAAMnD,KAAKT,MAAMC,iBAcjD,yBAAKuD,UAAU,SAGtB,yBAAKA,UAAU,SAWf,yBAAKC,IAAK,SAAAvG,GAAG,OAAI,EAAK6C,IAAM7C,GAAKsG,UAAU,OACxCjG,EAAWsG,KAAK,SAACC,EAAM1B,GAAW,IAC3B5E,EAAuBsG,EAAvBtG,IAAKE,EAAkBoG,EAAlBpG,MAAOC,EAAWmG,EAAXnG,OACX,OACJ,4BAAQoG,IAAK3B,EAAO4B,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,OAAQ,cAAe1C,gBAAiB,eAAgBgC,IAAK,SAAAW,GAAM,OAAI,EAAKtE,WAAWsC,GAASgC,IAChK,yBACAC,IAAI,eACdN,IAAG,eAAU3B,GACb5E,IAAKA,EAAKE,MAAOA,EAAOC,OAAQA,EAChC8F,IAAM,SAAAa,GAAG,OAAI,EAAKzE,SAASuC,GAASkC,YAUzC,yBAAKd,UAAU,kBACd,4BACCA,UAAU,eACVe,QAAS,kBAAM,EAAKjG,OAAO6D,SAEvB,yBACGkC,IAAI,iBACX7G,IAAKgH,IAAe9G,MAAM,QAAQC,OAAO,QACzC8F,IAAM,SAAAa,GAAG,OAAI,EAAKlF,cAAgBkF,KAE7B,uBAAGN,MAAO,CAACtC,MAAO,QAAS+C,OAAQ,MAAOC,SAAU,WAAY3D,KAAM,IAAK4D,IAAK,MAAOC,WAAY,OAAQC,SAAU,OAAQC,eAAgB,SAAUC,UAAW,SAAUC,WAAY,gBAAgBvB,IAAK,SAAAwB,GAAC,OAAI,EAAK9F,SAAW8F,IAAlO,8BA7KH,yBAAKzB,UAAU,aACrB,yBAAKA,UAAU,OACd,yBAAKA,UAAU,eAMd,yBAAKA,UAAU,eAEd,yBAAKA,UAAU,OAEf,yBAAKA,UAAU,UAAUC,IAAM,SAAAvG,GAAG,OAAI,EAAKwB,QAAUxB,IAIpD,wBAAIuG,IAAM,SAAAC,GAAE,OAAI,EAAKnE,MAAM,GAAKmE,IAAhC,mBAAqD,0BAAMD,IAAK,SAAAE,GAAI,OAAI,EAAKpE,MAAM,GAAKoE,IAAnC,QAC9C,wBAAIF,IAAM,SAAAG,GAAE,OAAI,EAAKrE,MAAM,GAAKqE,IAAMnD,KAAKT,MAAMC,iBAEjD,4BAAQwD,IAAK,SAAAW,GAAM,OAAI,EAAK7C,KAAO6C,GAAQG,QAAS,kBAAM,EAAKlE,gBAC7D,wBAAIoD,IAAK,SAAAG,GAAE,OAAI,EAAK5E,aAAe4E,IAAnC,kBAEF,4BAAQH,IAAK,SAAAW,GAAM,OAAI,EAAK/E,KAAO+E,GAAQG,QAAS,kBAAM,EAAK/D,gBAC7D,4CAMF,yBAAKgD,UAAU,SAGtB,yBAAKA,UAAU,SAWf,yBAAKA,UAAU,OACZjG,EAAWsG,KAAK,SAACC,EAAM1B,GAAW,IAC3B5E,EAAmCsG,EAAnCtG,IAAKE,EAA8BoG,EAA9BpG,MAAOC,EAAuBmG,EAAvBnG,OAAQE,EAAeiG,EAAfjG,KAAMD,EAASkG,EAATlG,KACzB,OACE,4BAAQmG,IAAK3B,EAAO4B,MAAO,CAACvC,gBAAiB,eAAgBgC,IAAK,SAAAW,GAAM,OAAI,EAAK1E,QAAQ0C,GAASgC,GAAQG,QAAS,kBAAM,EAAKhE,aAAa6B,KAC3I,yBAEAiC,IAAI,eACdN,IAAG,eAAU3B,GACb5E,IAAKA,EAAKE,MAAOA,EAAOC,OAAQA,EAChC8F,IAAM,SAAAa,GAAG,OAAI,EAAK7E,MAAM2C,GAASkC,KAEzB,yBAAKb,IAAK,SAAAvG,GAAG,OAAI,EAAK0C,IAAIwC,GAASlF,GAAK8G,MAAO,CAACvC,gBAAiB,gBAChE,uBAAGuC,MAAO,CAACtC,MAAO,cAAe+C,OAAQ,MAAOC,SAAU,WAAY3D,KAAM,IAAK4D,IAAK,MAAOC,WAAY,OAAQM,SAAU,QAASC,UAAW,aAAcN,SAAU,OAAQC,eAAgB,SAAUC,UAAW,SAAUC,WAAY,gBAAgBvB,IAAK,SAAAwB,GAAC,OAAI,EAAKtF,YAAYyC,GAAS6C,IAC5R,uBAAGxB,IAAK,SAAA2B,GAAC,OAAI,EAAKxH,KAAKwE,GAASgD,GAAGpB,MAAO,CAACqB,QAAS,WAAYC,KAAM1H,GAAOC,YAW7F,yBAAK2F,UAAU,kBACd,4BACQC,IAAK,SAAAW,GAAM,OAAI,EAAKlF,cAAgBkF,GAC3CZ,UAAU,eACVe,QAAS,kBAAM,EAAKjG,OAAO6D,SAH5B,KAIG,yBACG6B,MAAO,CAACuB,eAAgB,QAAS5H,OAAQ,OAAQD,MAAO,OAAQgH,SAAU,WAAYC,IAAK,IAAK5D,KAAM,KACtGsD,IAAI,iBACJ7G,IAAKgH,IACLf,IAAM,SAAAa,GAAG,OAAI,EAAKlF,cAAgBkF,KAEpC,uBAAGN,MAAO,CAACtC,MAAO,QAAS+C,OAAQ,MAAOC,SAAU,WAAY3D,KAAM,MAAO4D,IAAK,MAAOC,WAAY,OAAQC,SAAU,OAAQC,eAAgB,SAAUC,UAAW,SAAUC,WAAY,gBAAgBvB,IAAK,SAAAwB,GAAC,OAAI,EAAK9F,SAAW8F,IAApO,kC,GAnSQnI,IAAMC,WA4ZRE,IAAOC,IAAV,KC5bOsI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnD,QAAQmD,MAAMA,EAAMC,c","file":"static/js/main.964cf975.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pig.1b624e3f.png\";","module.exports = __webpack_public_path__ + \"static/media/chimpanz.dddae67b.png\";","module.exports = __webpack_public_path__ + \"static/media/doggy.990205b2.png\";","module.exports = __webpack_public_path__ + \"static/media/pigcheck.521daf1d.png\";","module.exports = __webpack_public_path__ + \"static/media/pigx.62adb418.png\";","module.exports = __webpack_public_path__ + \"static/media/chimpx.e1734616.png\";","module.exports = __webpack_public_path__ + \"static/media/chimpcheck.29dd30f4.png\";","module.exports = __webpack_public_path__ + \"static/media/dogcheck.4d021e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/dogx.91aa6f78.png\";","module.exports = __webpack_public_path__ + \"static/media/pigbackground.5ecacfa1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-mark.d7d63539.png\";","module.exports = __webpack_public_path__ + \"static/media/check.7c87ab24.png\";","import React from 'react';  \nimport styled from \"styled-components\";\n\nclass Popup extends React.Component {  \n  render() {  \n\nreturn (  \n<Wrapper>\n<div className='popup'>  \n<div className='popup\\_inner'>  \n<p>{this.props.text}</p>  \n</div>  \n</div>  \n</Wrapper>\n);  \n}  \n}  \n\nexport default Popup;\n\nconst Wrapper = styled.div`\n\n.popup {\n    border: 1px solid blue;\n    text-align: left;\n    // color: #FAFAD2;\n    color: black;\n    background-color: white;\n    font-family: 'Helvetica Neue';\n    font-size: 16px;\n    margin: auto;\n    width: 20%;\n    padding: 10px 10px 10px 10px;\n    // border-radius: 5%;\n    position: absolute; \n}\n\n// .h1 {\n//     text-align: left;\n//     color: green;\n//     font-family: 'HelveticaNeue-Light';\n//     font-size: 16px;\n// }\n\nbutton {\n    width: 50px;\n}\n`\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import './GSAPComponent.css'\nimport styled from 'styled-components'\nimport { gsap } from 'gsap';\nimport pig from './pig.png'\nimport chimp from './chimpanz.png'\nimport dog from './doggy.png'\nimport xmark from './x-mark.png'\nimport check from './check.png'\nimport pigcheck from './pigcheck.png'\nimport pigx from './pigx.png'\nimport chimpx from './chimpx.png'\nimport chimpcheck from './chimpcheck.png'\nimport dogcheck from './dogcheck.png'\nimport dogx from './dogx.png'\nimport pigbackground from './pigbackground.jpeg'\nimport Popup from './Popup'\nimport { TimelineLite, CSSPlugin, TextPlugin, RoughEase, Linear, Back, shuffle } from \"gsap/all\";\ngsap.registerPlugin(CSSPlugin)\ngsap.registerPlugin(TextPlugin);\n\n\n\nconst iconsArray = [\n\t{ src: pig, width: \"250\", height: \"250\", link: \"https://aeon.co/essays/what-more-evidence-do-we-need-to-stop-killing-pigs-for-food\", info: \"Read, `What more evidence do we need to stop killing pigs for food?` in Aeon\" },\n  { src: chimp, width: \"250\", height: \"250\", link: \"https://www.nonhumanrights.org/?gclid=EAIaIQobChMIxPWu5Ius6QIVhQiICR34dAi0EAAYASAAEgK4JPD_BwE\", info: \"Learn about the Nonhuman Rights Project\" },\n\t{ src: dog, width: \"250\", height: \"250\", link:\"https://www.seeker.com/iq-tests-suggest-pigs-are-smart-as-dogs-chimps-1769934406.html\", info: \"Research from the Nonhuman Rights Project that this website is based off of\"},\n];\nconst questionsArr = [\n{id: 1, text: \"can comprehend a simple symbolic language\", pig: true, chimp: true, dog: false},\n{id: 2, text: \"have excellent long-term memories\", pig: true, chimp: true, dog: true},\n{id: 3, text: \"are whizzes with mazes and other tests requiring location of objects\", pig: true, chimp: true, dog: true},\n{id: 4, text: \"live in complex social communities where they keep track of individuals and learn from one another \", pig: true, chimp: true, dog: true},\n{id: 5, text: \"excellent at manipulating a joystick to move an on-screen cursor\", pig: true, chimp: true, dog: false},\n{id: 6, text: \"can use a mirror to find hidden food\", pig: true, chimp: true, dog: false},\n{id: 7, text: \"exhibit a form of empathy when witnessing the same emotion in another individual\", pig: true, chimp: true, dog: true},\n]\n\nlet numberCorrect = 0;\n\nclass App extends React.Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\n    this.logoTl = new gsap.timeline({ paused:true });\n    this.animalTl = new gsap.timeline({paused: true})\n\n\t\tthis.content = null;\n\t\tthis.head = null;\n\t\tthis.subhead = null;\n    this.feature = null;\n    this.reading = null;\n    this.description = null;\n    this.questionText = null;\n    this.check = null;\n    this.starterButton = null;\n    this.enterPig = null;\n    this.pigBackground = null;\n    this.show = null;\n    this.popup1 = null;\n    this.cards = [this.head, this.word, this.subhead]\n    this.icons = [];\n    this.buttons = [];\n    this.furtherInfo =[];\n    this.box = [];\n    this.link = [];\n    this.newIcons = [];\n    this.newButtons = [];\n    this.nav = null;\n    \n    \n    this.state = {\n      currentQuestion: \"But maybe you're smarter?\",\n      currentIndx: 0,\n      selectedStart: false,\n      furtherReading: false, \n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.selectAnimal = this.selectAnimal.bind(this);\n    this.showCorrect = this.showCorrect.bind(this);\n\t}\n\n\t// add instances to the timeline\n\tcomponentDidMount(){\n    this.logoTl\n      .set(this.cards[2], {opacity: 0})\n      .set(this.enterPig, {hidden: true})\n      .set(this.pigBackground, {hidden: true})\n      .set(this.starterButton, {hidden: true})\n      .set(this.content, { autoAlpha: 1 })// show content div\n      .from(this.cards[0], 0.5, { left: 100, autoAlpha: 0 })\n\n    this.logoTl.to(this.cards[1], {duration: 1,   text: {\n        value: \"Empathetic\"\n      }, ease: \"none\"})\n      .to(this.cards[1], {duration: 1,   text: {\n         value: \"Aware\"\n      }\n    , ease: \"none\"})\n      .to(this.cards[1], {duration: 1,   text: {\n        value: \"Sensitive\"\n      }\n    , ease: \"none\"})\n      .to(this.cards[1], {duration: 1,   text: {\n        value: \"Smart\"\n      }\n    , ease: \"none\"})\n\n   this.logoTl.from(this.cards[2], 0.5, { left: 100, autoAlpha: 0 }) // added -0.25 seconds prior to end this.of timeline\n    \n   this.logoTl.staggerTo( this.cards, 2, {opacity: 0 }, 0.1, \"-=0.25\")\n\n   this.logoTl.to(this.cards[0], {opacity: 1, text: \"Select all of the animals which the following statement applies to\"})\n\n      // .from(this.feature, 0.5, { scale: .5, autoAlpha: 0 }, \"feature\") // added 0.5 seconds after end of timeline\n    // this.logoTl.from(this.description, 0.5, { left: 100, autoAlpha: 0 }, \"-=0.25\")\n    .set(this.link, {hidden: \"true\"})\n    .staggerFrom(this.icons, 0.2, { scale: 0, autoAlpha: 0 }, 0.1) //animate all icons with 0.1 second stagger\n    .staggerFrom(this.buttons, 0.2, { scale: 0, autoAlpha: 0 }, 0.1); \n  \n    // this.logoTl.from(this.question, 0.5, { left: 100, autoAlpha: 0 }, \"-=0.25\")\n    this.logoTl.from(this.next, 0.5, { left: 100, autoAlpha: 0 }, \"-=0.25\")\n    this.logoTl.from(this.show, 0.5, { left: 100, autoAlpha: 0 }, \"-=0.25\")\n\n    this.logoTl.set(this.cards[2], {opacity: 1, text: \"can comprehend a simple symbolic language\"}, \"-=0.25\")\n\n    this.animalTl.set(this.content, { autoAlpha: 1 })// show content div\n    .to(this.cards[2], {duration: 1,   text: {\n      value: \"Further reading\"\n    }, ease: \"none\"}, \"+=2\")\n   \n    this.animalTl.staggerTo(this.icons, 0.2, { hidden: false }, 0.25)\n    .staggerTo(this.buttons, 0.2, { margin: \"10px\", hidden: false, backgroundColor: \"#939799\"}, 0.25)\n    .staggerTo(this.furtherInfo, 0.2, { color: \"#000000\" }, 0.25)\n    .set(this.icons, {opacity: 0.5})\n    .staggerTo(this.link, 0.2, {hidden: false}, 0.25)\n    // .staggerTo(this.box, 0.2, { backgroundColor: \"#939799\", opacity: 0.5 }, 0.25)\n   \n\n\n    // .staggerFrom(this.buttons, 0.2, { opacity: 1, scale: 0, autoAlpha: 0 }, 0.1)\n\n  }\n  \n\n  handleClick(){\n    gsap.set(this.buttons,  {backgroundColor: \"transparent\"}); \n    gsap.set(this.icons[0], {attr:{src: pig}})\n    gsap.set(this.icons[1], {attr:{src: chimp}})\n    gsap.set(this.icons[2], {attr:{src: dog}})\n    if (this.state.currentIndx < 6){\n    const nextIndx = this.state.currentIndx + 1 \n    this.setState({\n      currentQuestion: questionsArr[nextIndx].text,\n      currentIndx: nextIndx\n    }) \n    }\n    else {\n      this.setState({\n        currentQuestion: `Correct: ${numberCorrect}/18, Answer: Pigs rock`,\n      }) \n      gsap.set(this.buttons, {hidden: true})\n      gsap.set(this.icons, {hidden: true})\n      gsap.set(this.show, {hidden: true})\n      gsap.set(this.next, {hidden: true})\n      gsap.set(this.cards[0], {hidden: true})\n      let last = iconsArray.pop()\n      iconsArray.unshift(last)\n      iconsArray.forEach(element => {\n        element.width = \"350px\"\n        element.height = \"350px\"\n      })\n      this.animalTl.play()\n    }\n  }\n\n\n  selectAnimal(index){\n  // var rough = new gsap.RoughEase({strength:3, points:50, taper:\"both\", randomize:false});\n  if (index === 0){\n    if (questionsArr[this.state.currentIndx].pig){\n      numberCorrect++\n      gsap.set(this.buttons[0], {backgroundColor: \"#90ee90\"})\n      gsap.set(this.icons[0], {attr:{src: pigcheck}})\n      gsap.fromTo(this.icons[0], 0.3, {x:-1}, {x:1, ease:RoughEase.ease.config({strength:8, points:20, template:Linear.easeNone, randomize:false}) , clearProps:\"x\"})\n    }\n    else {\n      gsap.set(this.buttons[0], {backgroundColor:\"#FF0000\"})\n      gsap.set(this.icons[0], {attr:{src: pigx}})\n      gsap.fromTo(this.icons[0], 0.3, {x:-1}, {x:1, ease:RoughEase.ease.config({strength:8, points:20, template:Linear.easeNone, randomize:false}) , clearProps:\"x\"})\n    }\n    }\n  else if (index === 1){\n    if (questionsArr[this.state.currentIndx].chimp){\n      numberCorrect++\n      gsap.set(this.buttons[1], {backgroundColor: \"#90ee90\"})\n      gsap.set(this.icons[1], {attr:{src: chimpcheck}})\n      gsap.fromTo(this.icons[1], 0.3, {x:-1}, {x:1, ease:RoughEase.ease.config({strength:8, points:20, template:Linear.easeNone, randomize:false}) , clearProps:\"x\"})\n    }\n    else {\n      gsap.set(this.buttons[1], {backgroundColor:\"#FF0000\"})\n      gsap.set(this.icons[1], {attr:{src: chimpx}})\n      gsap.fromTo(this.icons[1], 0.3, {x:-1}, {x:1, ease:RoughEase.ease.config({strength:8, points:20, template:Linear.easeNone, randomize:false}) , clearProps:\"x\"})\n    }\n  }\n  else {\n    if (questionsArr[this.state.currentIndx].dog){\n      numberCorrect++\n      gsap.set(this.buttons[2], {backgroundColor: \"#90ee90\"})\n      gsap.set(this.icons[2], {attr:{src: dogcheck}})\n      gsap.fromTo(this.icons[2], 0.3, {x:-1}, {x:1, ease:RoughEase.ease.config({strength:8, points:20, template:Linear.easeNone, randomize:false}) , clearProps:\"x\"})\n    }\n    else {\n      gsap.set(this.buttons[2], {backgroundColor:\"#FF0000\"})\n      gsap.set(this.icons[2], {attr:{src: dogx}})\n      gsap.fromTo(this.icons[2], 0.3, {x:-1}, {x:1, ease:RoughEase.ease.config({strength:8, points:20, template:Linear.easeNone, randomize:false}) , clearProps:\"x\"})\n    }\n  }\n  }\n\n  showCorrect(){\n    if (questionsArr[this.state.currentIndx].pig){\n      gsap.set(this.buttons[0], {backgroundColor: \"#90ee90\"})\n      gsap.set(this.icons[0], {attr:{src: pigcheck}})\n    }\n    else {\n      gsap.set(this.buttons[0], {backgroundColor:\"#FF0000\"})\n      gsap.set(this.icons[0], {attr:{src: pigx}})\n    }\n    if (questionsArr[this.state.currentIndx].chimp){\n      gsap.set(this.buttons[1], {backgroundColor: \"#90ee90\"})\n      gsap.set(this.icons[1], {attr:{src: chimpcheck}})\n    }\n    else {\n      gsap.set(this.buttons[1], {backgroundColor:\"#FF0000\"})\n      gsap.set(this.icons[1], {attr:{src: chimpx}})\n    }\n    if (questionsArr[this.state.currentIndx].dog){\n      gsap.set(this.buttons[2], {backgroundColor: \"#90ee90\"})\n      gsap.set(this.icons[2], {attr:{src: dogcheck}})\n    }\n    else {\n      gsap.set(this.buttons[2], {backgroundColor:\"#FF0000\"})\n      gsap.set(this.icons[2], {attr:{src: dogx}})\n    }\n    \n  }\n\n\trender(){\n    console.log('STATE', this.state)\n    if (!this.state.furtherReading){\n\t\treturn <div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-12 mt-3\">\n\n\t\t\t\t\t{/* <h3 className=\"text-center\">Timeline Sequence</h3>\n\t\t\t\t\t<p className=\"lead\">Uses the <strong>ref</strong> callback to create references for a group of elements in the app. Then using the <strong>componentDidMount</strong> method, creates a timeline sequence that can be controlled using the buttons.</p>\n\t\t\t\t\t */}\n\t\t\t\t\t{/* DEMO WRAPPER */}\n\t\t\t\t\t<div className=\"demoWrapper\">\n\n\t\t\t\t\t\t<div className=\"bg\"></div>\n\n\t\t\t\t\t\t<div className=\"content\" ref={ div => this.content = div }>\n              {/* <h1 className=\"description\" ref={ h1 => this.description = h1 }>\n                  Select all of the animals which the following statement applies to\n                </h1> */}\n\t\t\t\t\t\t\t<h1 ref={ h1 => this.cards[0] = h1 }>Pigs are really <span ref={span => this.cards[1] = span}>...</span></h1>\n              <h2 ref={ h2 => this.cards[2] = h2 }>{this.state.currentQuestion}</h2>\n              {/* <h2 className=\"quiz\" ref={h2 => this.question = h2}>{this.state.currentQuestion}</h2> */}\n              <button ref={button => this.next = button} onClick={() => this.handleClick()}>\n                <h2 ref={h2 => this.questionText = h2} >Next Question</h2>\n              </button>\n              <button ref={button => this.show = button} onClick={() => this.showCorrect()}>\n                <h2 >Show Answer</h2>\n              </button>\n              {/* <br></br> */}\n              {/* <button style={{opacity: 0}} ref={button => this.reading = button} onClick={() => this.furtherReading()}>\n                <h2 >Further Reading</h2>\n              </button> */}\n              <div className=\"quiz\">\n                {/* <p ref={p => this.question = p}>{this.state.currentQuestion}</p> */}\n              </div>\n\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t{/* <img\n                  src=\"https://www.greensock.com/_img/codepen/feature_robust.png\"\n                  alt=\"random_image\"\n\t\t\t\t\t\t\t\t\twidth=\"240\"\n\t\t\t\t\t\t\t\t\theight=\"151\"\n\t\t\t\t\t\t\t\t\tclassName=\"feature\"\n\t\t\t\t\t\t\t\t\tref={ img => this.feature = img } \n\t\t\t\t\t\t\t\t/> */}\n\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"nav\">\n\t\t\t\t\t\t\t\t{ iconsArray.map( (icon, index) => {\n\t\t\t\t\t\t\t\t\tconst { src, width, height, info, link } = icon;\n                  return (\n                    <button key={index} style={{backgroundColor: \"transparent\"}} ref={button => this.buttons[index] = button} onClick={() => this.selectAnimal(index)} >\n                    <img\n                    // style={{position: \"relative\"}}\n                    alt=\"random_image\"\n\t\t\t\t\t\t\t\t\t\tkey={`icon-${index}`}\n\t\t\t\t\t\t\t\t\t\tsrc={src} width={width} height={height}\n\t\t\t\t\t\t\t\t\t\tref={ img => this.icons[index] = img }\n                  />\n                  <div ref={div => this.box[index] = div} style={{backgroundColor: \"transparent\"}}>\n                   <p style={{color: \"transparent\", zIndex: \"100\", position: \"absolute\", left: \"0\", top: \"20%\", fontWeight: \"bold\", maxWidth: \"350px\", wordBreak: \"break-word\", fontSize: \"33px\", justifyContent: \"center\", alignText: \"center\", fontFamily: \"Hoefler Text\"}}ref={p => this.furtherInfo[index] = p}>\n                     <a ref={a => this.link[index] = a} style={{onHover: \"#ffffff\"}} href={link}>{info}</a>\n                     </p>\n                   </div>\n                  </button>\n                  )\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* BUTTONS */}\n\t\t\t\t\t<div className=\"my-3 btn-group\">\n\t\t\t\t\t\t<button\n              ref={button => this.starterButton = button}\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.play()}\n\t\t\t\t\t\t>  <img\n            style={{backgroundSize: \"cover\", height: \"100%\", width: \"100%\", position: \"absolute\", top: \"0\", left: \"0\"}}\n            alt=\"pig_background\"\n            src={pigbackground}\n            ref={ img => this.pigBackground = img }\n                />\n          <p style={{color: \"black\", zIndex: \"100\", position: \"absolute\", left: \"33%\", top: \"25%\", fontWeight: \"bold\", fontSize: \"60px\", justifyContent: \"center\", alignText: \"center\", fontFamily: \"Hoefler Text\"}}ref={p => this.enterPig = p}>Enter Pig Interactive</p>\n          </button>\n\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.pause()}\n\t\t\t\t\t\t>Pause</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.reverse()}\n\t\t\t\t\t\t>Reverse</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.restart()}\n\t\t\t\t\t\t>Restart</button> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>;\n    }\n    else {\n      return <div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-12 mt-3\">\n\n\t\t\t\t\t{/* <h3 className=\"text-center\">Timeline Sequence</h3>\n\t\t\t\t\t<p className=\"lead\">Uses the <strong>ref</strong> callback to create references for a group of elements in the app. Then using the <strong>componentDidMount</strong> method, creates a timeline sequence that can be controlled using the buttons.</p>\n\t\t\t\t\t */}\n\t\t\t\t\t{/* DEMO WRAPPER */}\n\t\t\t\t\t<div className=\"demoWrapper\">\n\n\t\t\t\t\t\t<div className=\"bg\"></div>\n\n\t\t\t\t\t\t<div className=\"content\" ref={ div => this.content = div }>\n              {/* <h1 className=\"description\" ref={ h1 => this.description = h1 }>\n                  Select all of the animals which the following statement applies to\n                </h1> */}\n\t\t\t\t\t\t\t<h1 ref={ h1 => this.cards[0] = h1 }>Pigs are really <span ref={span => this.cards[1] = span}>...</span></h1>\n              <h2 ref={ h2 => this.cards[2] = h2 }>{this.state.currentQuestion}</h2>\n\n  \n              {/* <h2 className=\"quiz\" ref={h2 => this.question = h2}>{this.state.currentQuestion}</h2> */}\n              {/* <button ref={button => this.next = button} onClick={() => this.handleClick()}>\n                <h2 ref={h2 => this.questionText = h2} >Next Question</h2>\n              </button>\n              <button ref={button => this.show = button} onClick={() => this.showCorrect()}>\n                <h2 >Show Answer</h2>\n              </button> */}\n              {/* <br></br> */}\n              {/* <button style={{opacity: 0}} ref={button => this.reading = button} onClick={() => this.furtherReading()}>\n                <h2 >Further Reading</h2>\n              </button> */}\n              <div className=\"quiz\">\n                {/* <p ref={p => this.question = p}>{this.state.currentQuestion}</p> */}\n              </div>\n\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t{/* <img\n                  src=\"https://www.greensock.com/_img/codepen/feature_robust.png\"\n                  alt=\"random_image\"\n\t\t\t\t\t\t\t\t\twidth=\"240\"\n\t\t\t\t\t\t\t\t\theight=\"151\"\n\t\t\t\t\t\t\t\t\tclassName=\"feature\"\n\t\t\t\t\t\t\t\t\tref={ img => this.feature = img } \n\t\t\t\t\t\t\t\t/> */}\n\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div ref={div => this.nav = div} className=\"nav\">\n\t\t\t\t\t\t\t\t{ iconsArray.map( (icon, index) => {\n\t\t\t\t\t\t\t\t\tconst { src, width, height } = icon;\n                  return (\n              <button key={index} style={{display: \"flex\", flexDirection: \"column\", border: \"transparent\", backgroundColor: \"transparent\"}} ref={button => this.newButtons[index] = button} >\n                    <img\n                    alt=\"random_image\"\n\t\t\t\t\t\t\t\t\t\tkey={`icon-${index}`}\n\t\t\t\t\t\t\t\t\t\tsrc={src} width={width} height={height}\n\t\t\t\t\t\t\t\t\t\tref={ img => this.newIcons[index] = img }\n                  />\n              </button>\n                  )\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* BUTTONS */}\n\t\t\t\t\t<div className=\"my-3 btn-group\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.play()}\n\t\t\t\t\t\t>\n           <img\n              alt=\"pig_background\"\n\t\t\t\t\t\t\tsrc={pigbackground} width=\"800px\" height=\"600px\"\n\t\t\t\t\t\t\tref={ img => this.pigBackground = img }\n                  />\n            <p style={{color: \"black\", zIndex: \"100\", position: \"absolute\", left: \"0\", top: \"20%\", fontWeight: \"bold\", fontSize: \"60px\", justifyContent: \"center\", alignText: \"center\", fontFamily: \"Hoefler Text\"}}ref={p => this.enterPig = p}>Enter Pig Interactive</p>\n            </button>\n\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.pause()}\n\t\t\t\t\t\t>Pause</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.reverse()}\n\t\t\t\t\t\t>Reverse</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn gsap-btn\"\n\t\t\t\t\t\t\tonClick={() => this.logoTl.restart()}\n\t\t\t\t\t\t>Restart</button> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>;\n\n    }\n\t}\n}\n\nexport default App;\n\n\n\nconst Wrapper = styled.div`\n\n\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}